
select track.*, row_number() OVER (PARTITION BY albumid ORDER BY trackid) AS trackNo
from track
order by albumid, trackNo ;


﻿with new_track as 
	(select track.*, row_number() 
     OVER (PARTITION BY albumid ORDER BY trackid) AS trackNo
	from track)
select artist.name as artist_name, title as album_title, 
	COALESCE(nt1.name,' ') as track_1, 
    COALESCE(nt2.name,' ') as track_2, 
    COALESCE(nt3.name,' ') as track_3
from artist 
	inner join album on artist.artistid = album.artistid
    left outer join new_track nt1 
    	on album.albumid = nt1.albumid and nt1.trackNo = 1 
    left outer join new_track nt2 
    	on album.albumid = nt2.albumid and nt2.trackNo = 2 
    left outer join new_track nt3 
    	on album.albumid = nt3.albumid and nt3.trackNo = 3 
order by 1, 2

   
    ﻿with sales_artists_years as (
	select artist.name as artist_name, 
		extract (year from invoicedate) as year,
    	sum(quantity * invoiceline.unitprice) as sales
	from invoice
		inner join invoiceline on invoice.invoiceid = invoiceline.invoiceid
		inner join track on invoiceline.trackid = track.trackid
		inner join album on track.albumid = album.albumid
		inner join artist on album.artistid = artist.artistid
	where extract (year from invoicedate) between 2011 and 2013
	group by artist.name, extract (year from invoicedate) )
select artist.name as artist_name, 
	coalesce(say2011.sales, 0) as sales_2011,
	coalesce(say2012.sales, 0) as sales_2012,
	coalesce(say2013.sales, 0) as sales_2013, 
    coalesce(say2011.sales, 0) + coalesce(say2012.sales, 0) +
    coalesce(say2013.sales, 0) as total
from artist
	left outer join sales_artists_years say2011 
    	on artist.name = say2011.artist_name and say2011.year = 2011
	left outer join sales_artists_years say2012 
    	on artist.name = say2012.artist_name and say2012.year = 2012
	left outer join sales_artists_years say2013 
    	on artist.name = say2013.artist_name and say2013.year = 2013
	union 
select 'total', 
	(select sum(sales) from sales_artists_years where year = 2011),
	(select sum(sales) from sales_artists_years where year = 2012),
	(select sum(sales) from sales_artists_years where year = 2013),
	0
    
    
    
   
    
                        


order by 1



















﻿
with taa as
	(select  row_number() OVER (PARTITION BY albumid ORDER BY trackid) AS trackNo,
		track.*
	from track
	order by albumid, trackNo)
select artist.name as nume_artist, album.title as titlu_album,
	coalesce(taa1.name,' ') as piesa_1, 
    coalesce(taa2.name,' ') as piesa2,
    coalesce(taa3.name,' ') as piesa3    
from album
	inner join artist on album.artistid = artist.artistid
    left outer join taa taa1 on album.albumid = taa1.albumid and
    	taa1.trackNo = 1
    left outer join taa taa2 on album.albumid = taa2.albumid and
    	taa2.trackNo = 2        
    left outer join taa taa3 on album.albumid = taa3.albumid and
    	taa3.trackNo = 3       
order by 1, 2





﻿with tab as (
    select artist.name as nume_artist, extract (year from invoicedate) as an,
    	sum(quantity * invoiceline.unitprice) as vanzari
    from artist
    	inner join album on artist.artistid = album.artistid 
    	inner join track on album.albumid = track.albumid 
    	inner join invoiceline on track.trackid = invoiceline.trackid 
    	inner join invoice on invoiceline.invoiceid = invoice.invoiceid 
    where extract (year from invoicedate) between 2011 and 2013
    group by artist.name, extract (year from invoicedate)
	)
select artist.name as nume_artist,
	coalesce(tab2011.vanzari,0) as vnz_2011, 
    coalesce(tab2012.vanzari,0) as vnz_2012,
    coalesce(tab2013.vanzari,0) as vnz_2013, 
    coalesce(tab2011.vanzari,0) + coalesce(tab2012.vanzari,0) +
     coalesce(tab2013.vanzari,0) as total_artist
from artist
	left outer join tab tab2011 on artist.name = tab2011.nume_artist and
    	tab2011.an = 2011
	left outer join tab tab2012 on artist.name = tab2012.nume_artist and
    	tab2012.an = 2012
	left outer join tab tab2013 on artist.name = tab2013.nume_artist and
    	tab2013.an = 2013       
	union
select 'zzz      T O T A L     zzz', 
	(select coalesce(sum(quantity * invoiceline.unitprice),0) 
     from invoiceline 
    	inner join invoice on invoiceline.invoiceid = invoice.invoiceid 
    where extract (year from invoicedate) = 2011), 
    (select coalesce(sum(quantity * invoiceline.unitprice),0) 
     from invoiceline 
    	inner join invoice on invoiceline.invoiceid = invoice.invoiceid 
    where extract (year from invoicedate) = 2012), 
    (select coalesce(sum(quantity * invoiceline.unitprice),0) 
     from invoiceline 
    	inner join invoice on invoiceline.invoiceid = invoice.invoiceid 
    where extract (year from invoicedate) = 2013), 
    (select coalesce(sum(quantity * invoiceline.unitprice),0) 
     from invoiceline 
    	inner join invoice on invoiceline.invoiceid = invoice.invoiceid 
    where extract (year from invoicedate) between 2011 and 2013)
order by 1 ;



-- solutie 2
select artist.name as nume_artist, 
	(select coalesce(sum(quantity * invoiceline.unitprice),0) 
     from artist a1
    	inner join album on a1.artistid = album.artistid 
    	inner join track on album.albumid = track.albumid 
    	inner join invoiceline on track.trackid = invoiceline.trackid 
    	inner join invoice on invoiceline.invoiceid = invoice.invoiceid 
    where a1.name = artist.name and
     	extract (year from invoicedate) = 2011) as vnz_2011,
	(select coalesce(sum(quantity * invoiceline.unitprice),0) 
     from artist a1
    	inner join album on a1.artistid = album.artistid 
    	inner join track on album.albumid = track.albumid 
    	inner join invoiceline on track.trackid = invoiceline.trackid 
    	inner join invoice on invoiceline.invoiceid = invoice.invoiceid 
    where a1.name = artist.name and
     	extract (year from invoicedate) = 2012) as vnz_2012        
from artist
order by 1










